/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/v1/auth/login": {
    /** Login For Access Token */
    post: operations["login_for_access_token_api_v1_auth_login_post"];
  };
  "/api/v1/auth/refresh": {
    /** Refresh Access Token */
    post: operations["refresh_access_token_api_v1_auth_refresh_post"];
  };
  "/api/v1/auth/revoke": {
    /** Revoke Access Token */
    post: operations["revoke_access_token_api_v1_auth_revoke_post"];
  };
  "/api/v1/branches/": {
    /** List */
    get: operations["list_api_v1_branches__get"];
    /** Create New Branch */
    post: operations["create_new_branch_api_v1_branches__post"];
  };
  "/api/v1/branches/{branch_id}": {
    /** Read */
    get: operations["read_api_v1_branches__branch_id__get"];
    /** Remove Branch */
    delete: operations["remove_branch_api_v1_branches__branch_id__delete"];
    /** Patch Branch */
    patch: operations["patch_branch_api_v1_branches__branch_id__patch"];
  };
  "/api/v1/branches/assign-user": {
    /** Assign User */
    post: operations["assign_user_api_v1_branches_assign_user_post"];
  };
  "/api/v1/branches/assign-multiple-users": {
    /** Assign Multiple Users */
    post: operations["assign_multiple_users_api_v1_branches_assign_multiple_users_post"];
  };
  "/api/v1/i18n/{namespace}/{language}.json": {
    /** Read */
    get: operations["read_api_v1_i18n__namespace___language__json_get"];
  };
  "/api/v1/logs/": {
    /** List */
    get: operations["list_api_v1_logs__get"];
  };
  "/api/v1/logs/branch/{branch_id}": {
    /** Branch Log */
    get: operations["branch_log_api_v1_logs_branch__branch_id__get"];
  };
  "/api/v1/logs/municipality/{municipality_id}": {
    /** Municipality Log */
    get: operations["municipality_log_api_v1_logs_municipality__municipality_id__get"];
  };
  "/api/v1/logs/user/{user_id}": {
    /** User Log */
    get: operations["user_log_api_v1_logs_user__user_id__get"];
  };
  "/api/v1/municipalities/": {
    /** List */
    get: operations["list_api_v1_municipalities__get"];
    /** Create New Municipality */
    post: operations["create_new_municipality_api_v1_municipalities__post"];
  };
  "/api/v1/municipalities/{municipality_id}": {
    /** Read */
    get: operations["read_api_v1_municipalities__municipality_id__get"];
    /** Remove Municipality */
    delete: operations["remove_municipality_api_v1_municipalities__municipality_id__delete"];
    /** Patch Municipality */
    patch: operations["patch_municipality_api_v1_municipalities__municipality_id__patch"];
  };
  "/api/v1/municipalities/{municipality_id}/file-upload": {
    /**
     * Upload File
     * @description This is a special view, which handles image-uploads for municipality.
     */
    post: operations["upload_file_api_v1_municipalities__municipality_id__file_upload_post"];
  };
  "/api/v1/municipalities/{municipality_id}/file-update": {
    /**
     * Update File
     * @description This is a special view, which handles image-uploads for municipality.
     */
    patch: operations["update_file_api_v1_municipalities__municipality_id__file_update_patch"];
  };
  "/api/v1/municipalities/{municipality_id}/file-delete/{field}": {
    /**
     * Remove File
     * @description Handles deletion of images attached to fields "image" or "emblem".
     */
    delete: operations["remove_file_api_v1_municipalities__municipality_id__file_delete__field__delete"];
  };
  "/api/v1/municipalities/assign-user": {
    /** Assign User */
    post: operations["assign_user_api_v1_municipalities_assign_user_post"];
  };
  "/api/v1/municipalities/assign-multiple-users": {
    /** Assign Multiple Users */
    post: operations["assign_multiple_users_api_v1_municipalities_assign_multiple_users_post"];
  };
  "/api/v1/municipalities/revoke-user-role": {
    /** Remove User */
    patch: operations["remove_user_api_v1_municipalities_revoke_user_role_patch"];
  };
  "/api/v1/users/profile": {
    /** Read Users Me */
    get: operations["read_users_me_api_v1_users_profile_get"];
  };
  "/api/v1/users/": {
    /** List */
    get: operations["list_api_v1_users__get"];
    /** Create New User */
    post: operations["create_new_user_api_v1_users__post"];
  };
  "/api/v1/users/minimal": {
    /** List Minimal */
    get: operations["list_minimal_api_v1_users_minimal_get"];
    /**
     * Create Minimal User
     * @description This endpoint creates a minimal user, who then should complete their
     * sign-up process themself.
     */
    post: operations["create_minimal_user_api_v1_users_minimal_post"];
  };
  "/api/v1/users/filtered": {
    /** Filtered List */
    post: operations["filtered_list_api_v1_users_filtered_post"];
  };
  "/api/v1/users/notifications": {
    /** Notifications */
    get: operations["notifications_api_v1_users_notifications_get"];
  };
  "/api/v1/users/notifications/{notification_id}": {
    /** Delete Notifications */
    delete: operations["delete_notifications_api_v1_users_notifications__notification_id__delete"];
  };
  "/api/v1/users/{user_id}": {
    /** Read */
    get: operations["read_api_v1_users__user_id__get"];
    /** Remove User */
    delete: operations["remove_user_api_v1_users__user_id__delete"];
    /** Patch User */
    patch: operations["patch_user_api_v1_users__user_id__patch"];
  };
  "/api/v1/users/activate": {
    /** Complete Registration */
    patch: operations["complete_registration_api_v1_users_activate_patch"];
  };
  "/api/v1/users/initiate-email-change": {
    /** Initiate Email Change */
    patch: operations["initiate_email_change_api_v1_users_initiate_email_change_patch"];
  };
  "/api/v1/users/finalise-email-change": {
    /** Finalise Email Change */
    patch: operations["finalise_email_change_api_v1_users_finalise_email_change_patch"];
  };
  "/api/v1/users/set-password": {
    /** Set User Password */
    patch: operations["set_user_password_api_v1_users_set_password_patch"];
  };
  "/api/v1/users/initiate-password-reset": {
    /**
     * Initiate Password Reset
     * @description This route, in constrast to other endpoints, will always return a code 200,
     * even if the password-reset was not initiate.
     */
    patch: operations["initiate_password_reset_api_v1_users_initiate_password_reset_patch"];
  };
  "/api/v1/users/finalise-password-reset": {
    /** Finalise Password Reset */
    patch: operations["finalise_password_reset_api_v1_users_finalise_password_reset_patch"];
  };
  "/api/v1/users/re-invite/{user_id}": {
    /** Reinvite User */
    patch: operations["reinvite_user_api_v1_users_re_invite__user_id__patch"];
  };
  "/api/v1/users/registration_check": {
    /** Registration Check */
    post: operations["registration_check_api_v1_users_registration_check_post"];
  };
  "/media/{storage}/{file_id}": {
    /** Serve File */
    get: operations["serve_file_media__storage___file_id__get"];
  };
  "/media/{storage}/{file_id}/download": {
    /** Serve File Download */
    get: operations["serve_file_download_media__storage___file_id__download_get"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** AddressCreateSchema */
    AddressCreateSchema: {
      /** Organisation */
      organisation?: string | null;
      /** Street */
      street: string;
      /** Street Additional Info */
      street_additional_info?: string | null;
      /** City */
      city: string;
      /** Zip Code */
      zip_code: string;
      /** Country */
      country: string;
      /** Phone */
      phone: string;
      /** Mobile */
      mobile?: string | null;
      /** Email */
      email?: string | null;
      /** Website */
      website?: string | null;
      /** Remarks */
      remarks?: string | null;
    };
    /** AddressSchema */
    AddressSchema: {
      /**
       * Created At
       * Format: date-time
       */
      created_at: string;
      /**
       * Modified At
       * Format: date-time
       */
      modified_at: string;
      /** Organisation */
      organisation?: string | null;
      /** Street */
      street: string;
      /** Street Additional Info */
      street_additional_info?: string | null;
      /** City */
      city: string;
      /** Zip Code */
      zip_code: string;
      /** Country */
      country: string;
      /** Phone */
      phone: string;
      /** Mobile */
      mobile?: string | null;
      /** Email */
      email?: string | null;
      /** Website */
      website?: string | null;
      /** Remarks */
      remarks?: string | null;
      /**
       * Municipalities
       * @default []
       */
      municipalities?: number[] | null;
      /**
       * Branches
       * @default []
       */
      branches?: number[] | null;
      /**
       * Users
       * @default []
       */
      users?: number[] | null;
    };
    /** AddressUpdateSchema */
    AddressUpdateSchema: {
      /** Organisation */
      organisation?: string | null;
      /** Street */
      street: string;
      /** Street Additional Info */
      street_additional_info?: string | null;
      /** City */
      city: string;
      /** Zip Code */
      zip_code: string;
      /** Country */
      country: string;
      /** Phone */
      phone: string;
      /** Mobile */
      mobile?: string | null;
      /** Email */
      email?: string | null;
      /** Website */
      website?: string | null;
      /** Remarks */
      remarks?: string | null;
    };
    /**
     * AnnotationType
     * @enum {integer}
     */
    AnnotationType: 0 | 1 | 2 | 3;
    /** Body_login_for_access_token_api_v1_auth_login_post */
    Body_login_for_access_token_api_v1_auth_login_post: {
      /** Grant Type */
      grant_type?: string | null;
      /** Username */
      username: string;
      /** Password */
      password: string;
      /**
       * Scope
       * @default
       */
      scope?: string;
      /** Client Id */
      client_id?: string | null;
      /** Client Secret */
      client_secret?: string | null;
    };
    /** Body_update_file_api_v1_municipalities__municipality_id__file_update_patch */
    Body_update_file_api_v1_municipalities__municipality_id__file_update_patch: {
      /**
       * Field
       * @enum {string}
       */
      field: "image" | "emblem";
      /** Name */
      name: string;
      /**
       * Upload File
       * Format: binary
       */
      upload_file?: string;
      /**
       * Caption
       * @default
       */
      caption?: string;
      /**
       * Copyright
       * @default
       */
      copyright?: string;
    };
    /** Body_upload_file_api_v1_municipalities__municipality_id__file_upload_post */
    Body_upload_file_api_v1_municipalities__municipality_id__file_upload_post: {
      /**
       * Field
       * @enum {string}
       */
      field: "image" | "emblem";
      /** Name */
      name: string;
      /**
       * Upload File
       * Format: binary
       */
      upload_file: string;
      /**
       * Caption
       * @default
       */
      caption?: string;
      /**
       * Copyright
       * @default
       */
      copyright?: string;
    };
    /** BranchCreateSchema */
    BranchCreateSchema: {
      /** Name */
      name: string;
      /** Organisation */
      organisation: string;
      /** Slug */
      slug: string;
      address: components["schemas"]["AddressCreateSchema"];
      /** Sandbox */
      sandbox: boolean;
      /** Parent Branch Id */
      parent_branch_id?: number | null;
    };
    /**
     * BranchRole
     * @constant
     */
    BranchRole: "branch-user";
    /** BranchSchema */
    BranchSchema: {
      /**
       * Created At
       * Format: date-time
       */
      created_at: string;
      /**
       * Modified At
       * Format: date-time
       */
      modified_at: string;
      /** Name */
      name: string;
      /** Organisation */
      organisation: string;
      /** Slug */
      slug: string;
      address: components["schemas"]["AddressSchema"];
      /** Sandbox */
      sandbox: boolean;
      /** Parent Branch Id */
      parent_branch_id?: number | null;
      /** Id */
      id: number;
      /**
       * Municipalities
       * @default []
       */
      municipalities?: number[] | null;
      /**
       * Child Branches
       * @default []
       */
      child_branches?: number[] | null;
    };
    /** BranchUpdateSchema */
    BranchUpdateSchema: {
      /** Name */
      name: string;
      /** Organisation */
      organisation: string;
      /** Slug */
      slug: string;
      address: components["schemas"]["AddressUpdateSchema"];
      /** Sandbox */
      sandbox: boolean;
      /** Parent Branch Id */
      parent_branch_id?: number | null;
    };
    /**
     * CertificationLevel
     * @enum {string}
     */
    CertificationLevel: "partner" | "not-applicable" | "eea" | "eea-gold";
    /** DeleteSchema */
    DeleteSchema: {
      /** Message */
      message: string;
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /** ImageFileSchema */
    ImageFileSchema: {
      /** File Id */
      file_id: string;
      /** Content Type */
      content_type: string;
      /** Size */
      size: number;
      /** Url */
      url: string;
      /** Files */
      files: string[];
      /** Path */
      path: string;
      /** Width */
      width: number;
      /** Height */
      height: number;
    };
    /** ImageSchema */
    ImageSchema: {
      /**
       * Created At
       * Format: date-time
       */
      created_at: string;
      /**
       * Modified At
       * Format: date-time
       */
      modified_at: string;
      /** Name */
      name: string;
      /**
       * Caption
       * @default
       */
      caption?: string | null;
      /**
       * Copyright
       * @default
       */
      copyright?: string | null;
      content: components["schemas"]["ImageFileSchema"];
      /** Id */
      id: number;
    };
    /**
     * Language
     * @enum {string}
     */
    Language: "bg-BG" | "de-AT" | "de-CH" | "de-DE" | "de-LU" | "de-IT" | "el-GR" | "en" | "fr-BE" | "fr-CH" | "fr-FR" | "fr-LU" | "fr-MC" | "hr-HR" | "it-CH" | "it-IT" | "mk-MK" | "nl-BE" | "pl-PL" | "sl-SI" | "sq-AL" | "uk-UA";
    /**
     * LocAction
     * @enum {string}
     */
    LocAction: "create" | "update" | "delete";
    /**
     * LogObjectType
     * @enum {string}
     */
    LogObjectType: "branch" | "municipality" | "user";
    /** LogSchema */
    LogSchema: {
      /**
       * Created At
       * Format: date-time
       */
      created_at: string;
      /**
       * Modified At
       * Format: date-time
       */
      modified_at: string;
      /** User Id */
      user_id: number | null;
      /** User Display Name */
      user_display_name: string;
      /** User Display Role */
      user_display_role: string;
      /** Obj Id */
      obj_id: number | null;
      obj_type: components["schemas"]["LogObjectType"];
      /** Obj Display Name */
      obj_display_name: string;
      /** Referenced Obj Id */
      referenced_obj_id: number | null;
      /** Referenced Obj Type */
      referenced_obj_type: string;
      /** Referenced Obj Display Name */
      referenced_obj_display_name: string;
      action: components["schemas"]["LocAction"];
      /** Message */
      message: Record<string, never>;
      /** Id */
      id: number;
    };
    /** MunicipalityCreateSchema */
    MunicipalityCreateSchema: {
      /** Name */
      name: string;
      /** Name Complete */
      name_complete: string;
      certification_level?: components["schemas"]["CertificationLevel"] | null;
      /** Certification Year Last */
      certification_year_last?: number | null;
      /** Certification Year Next */
      certification_year_next?: number | null;
      /** Slug */
      slug: string;
      /** Eea Participant */
      eea_participant: boolean;
      language: components["schemas"]["Language"];
      /** Inhabitants */
      inhabitants?: number | null;
      /** Glat */
      glat?: number | null;
      /** Glong */
      glong?: number | null;
      /** Branch Id */
      branch_id: number;
      address: components["schemas"]["AddressCreateSchema"];
    };
    /**
     * MunicipalityRole
     * @enum {string}
     */
    MunicipalityRole: "advisor" | "municipality-user";
    /** MunicipalitySchema */
    MunicipalitySchema: {
      /**
       * Created At
       * Format: date-time
       */
      created_at: string;
      /**
       * Modified At
       * Format: date-time
       */
      modified_at: string;
      /** Name */
      name: string;
      /** Name Complete */
      name_complete: string;
      certification_level?: components["schemas"]["CertificationLevel"] | null;
      /** Certification Year Last */
      certification_year_last?: number | null;
      /** Certification Year Next */
      certification_year_next?: number | null;
      /** Slug */
      slug: string;
      /** Eea Participant */
      eea_participant: boolean;
      language: components["schemas"]["Language"];
      /** Inhabitants */
      inhabitants?: number | null;
      /** Glat */
      glat?: number | null;
      /** Glong */
      glong?: number | null;
      /** Branch Id */
      branch_id: number;
      address: components["schemas"]["AddressSchema"];
      /** Id */
      id: number;
      image?: components["schemas"]["ImageSchema"] | null;
      emblem?: components["schemas"]["ImageSchema"] | null;
    };
    /** MunicipalityUpdateSchema */
    MunicipalityUpdateSchema: {
      /** Name */
      name: string;
      /** Name Complete */
      name_complete: string;
      certification_level?: components["schemas"]["CertificationLevel"] | null;
      /** Certification Year Last */
      certification_year_last?: number | null;
      /** Certification Year Next */
      certification_year_next?: number | null;
      /** Slug */
      slug: string;
      /** Eea Participant */
      eea_participant: boolean;
      language: components["schemas"]["Language"];
      /** Inhabitants */
      inhabitants?: number | null;
      /** Glat */
      glat?: number | null;
      /** Glong */
      glong?: number | null;
      /** Branch Id */
      branch_id: number;
      address: components["schemas"]["AddressUpdateSchema"];
    };
    /** UserAnnotationSchema */
    UserAnnotationSchema: {
      /**
       * Created At
       * Format: date-time
       */
      created_at: string;
      /**
       * Modified At
       * Format: date-time
       */
      modified_at: string;
      /** User Id */
      user_id: number;
      annotation_type: components["schemas"]["AnnotationType"];
      /** Payload */
      payload: Record<string, never>;
      /** Id */
      id: number;
    };
    /** UserBranchRoleCreateSchema */
    UserBranchRoleCreateSchema: {
      /** User Id */
      user_id: number;
      /** Branch Id */
      branch_id: number;
      role: components["schemas"]["BranchRole"];
    };
    /** UserBranchRoleSchema */
    UserBranchRoleSchema: {
      /**
       * Created At
       * Format: date-time
       */
      created_at: string;
      /**
       * Modified At
       * Format: date-time
       */
      modified_at: string;
      /** User Id */
      user_id: number;
      /** Branch Id */
      branch_id: number;
      role: components["schemas"]["BranchRole"];
    };
    /** UserCompleteRegistrationSchema */
    UserCompleteRegistrationSchema: {
      /** Token */
      token: string;
      /** Password */
      password: string;
    };
    /** UserCreateSchema */
    UserCreateSchema: {
      /** Name */
      name: string;
      /** Salutation */
      salutation?: string | null;
      /** Is Active */
      is_active: boolean;
      /** Is Superuser */
      is_superuser: boolean;
      language: components["schemas"]["Language"];
      /**
       * Email
       * Format: email
       */
      email: string;
      /** Password */
      password: string;
      address?: components["schemas"]["AddressCreateSchema"] | null;
      /**
       * Migrated
       * @default false
       */
      migrated?: boolean;
    };
    /** UserFilterSchema */
    UserFilterSchema: {
      /** Branch Id */
      branch_id?: number | null;
      /** Municipality Id */
      municipality_id?: number | null;
      /** Cycle Id */
      cycle_id?: number | null;
    };
    /** UserInviteSchema */
    UserInviteSchema: {
      /** Name */
      name: string;
      /**
       * Email
       * Format: email
       */
      email: string;
      language: components["schemas"]["Language"];
    };
    /** UserMinimalSchema */
    UserMinimalSchema: {
      /** Id */
      id: number;
      /**
       * Email
       * Format: email
       */
      email: string;
      /** Name */
      name: string;
      /** Is Active */
      is_active: boolean;
      /** Completed Registration */
      completed_registration: string | null;
    };
    /** UserMunicipalityRoleCreateSchema */
    UserMunicipalityRoleCreateSchema: {
      /** User Id */
      user_id: number;
      /** Municipality Id */
      municipality_id: number;
      role: components["schemas"]["MunicipalityRole"];
    };
    /** UserMunicipalityRoleSchema */
    UserMunicipalityRoleSchema: {
      /**
       * Created At
       * Format: date-time
       */
      created_at: string;
      /**
       * Modified At
       * Format: date-time
       */
      modified_at: string;
      /** User Id */
      user_id: number;
      /** Municipality Id */
      municipality_id: number;
      role: components["schemas"]["MunicipalityRole"];
    };
    /** UserMunicipalityRoleUpdateSchema */
    UserMunicipalityRoleUpdateSchema: {
      /** User Id */
      user_id: number;
      /** Municipality Id */
      municipality_id: number;
      role: components["schemas"]["MunicipalityRole"];
    };
    /** UserPasswortResetSchema */
    UserPasswortResetSchema: {
      /** Password New */
      password_new: string;
      /** Token */
      token: string;
    };
    /** UserRegistrationCheckSchema */
    UserRegistrationCheckSchema: {
      /**
       * Email
       * Format: email
       */
      email: string;
    };
    /** UserSchema */
    UserSchema: {
      /**
       * Created At
       * Format: date-time
       */
      created_at: string;
      /**
       * Modified At
       * Format: date-time
       */
      modified_at: string;
      /** Name */
      name: string;
      /** Salutation */
      salutation?: string | null;
      /** Is Active */
      is_active: boolean;
      /** Is Superuser */
      is_superuser: boolean;
      language: components["schemas"]["Language"];
      /** Id */
      id: number;
      /**
       * Email
       * Format: email
       */
      email: string;
      address?: components["schemas"]["AddressSchema"] | null;
      /**
       * Branch Roles
       * @default []
       */
      branch_roles?: unknown[];
      /**
       * Municipality Roles
       * @default []
       */
      municipality_roles?: unknown[];
      /** Completed Registration */
      completed_registration: string | null;
    };
    /** UserUpdateEmailSchema */
    UserUpdateEmailSchema: {
      /** Password */
      password: string;
      /**
       * New Email
       * Format: email
       */
      new_email: string;
    };
    /** UserUpdatePasswordSchema */
    UserUpdatePasswordSchema: {
      /** Password */
      password: string;
      /** Password New */
      password_new: string;
    };
    /** UserUpdateSchema */
    UserUpdateSchema: {
      /** Name */
      name: string;
      /** Salutation */
      salutation?: string | null;
      /** Is Active */
      is_active: boolean;
      /** Is Superuser */
      is_superuser: boolean;
      language: components["schemas"]["Language"];
      address: components["schemas"]["AddressUpdateSchema"];
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Login For Access Token */
  login_for_access_token_api_v1_auth_login_post: {
    requestBody: {
      content: {
        "application/x-www-form-urlencoded": components["schemas"]["Body_login_for_access_token_api_v1_auth_login_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": Record<string, never>;
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** Refresh Access Token */
  refresh_access_token_api_v1_auth_refresh_post: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": Record<string, never>;
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** Revoke Access Token */
  revoke_access_token_api_v1_auth_revoke_post: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["DeleteSchema"];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** List */
  list_api_v1_branches__get: {
    parameters: {
      header?: {
        "x-emt-role"?: string | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["BranchSchema"][];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** Create New Branch */
  create_new_branch_api_v1_branches__post: {
    parameters: {
      header?: {
        "x-emt-role"?: string | null;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["BranchCreateSchema"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["BranchSchema"];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** Read */
  read_api_v1_branches__branch_id__get: {
    parameters: {
      header?: {
        "x-emt-role"?: string | null;
      };
      path: {
        branch_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["BranchSchema"];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** Remove Branch */
  remove_branch_api_v1_branches__branch_id__delete: {
    parameters: {
      header?: {
        "x-emt-role"?: string | null;
      };
      path: {
        branch_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["DeleteSchema"];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** Patch Branch */
  patch_branch_api_v1_branches__branch_id__patch: {
    parameters: {
      header?: {
        "x-emt-role"?: string | null;
      };
      path: {
        branch_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["BranchUpdateSchema"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["BranchSchema"];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** Assign User */
  assign_user_api_v1_branches_assign_user_post: {
    parameters: {
      header?: {
        "x-emt-role"?: string | null;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserBranchRoleCreateSchema"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserBranchRoleSchema"];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** Assign Multiple Users */
  assign_multiple_users_api_v1_branches_assign_multiple_users_post: {
    parameters: {
      header?: {
        "x-emt-role"?: string | null;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserBranchRoleCreateSchema"][];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserBranchRoleSchema"][];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** Read */
  read_api_v1_i18n__namespace___language__json_get: {
    parameters: {
      header?: {
        "x-emt-role"?: string | null;
      };
      path: {
        namespace: string;
        language: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": Record<string, never>;
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** List */
  list_api_v1_logs__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["LogSchema"][];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** Branch Log */
  branch_log_api_v1_logs_branch__branch_id__get: {
    parameters: {
      path: {
        branch_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["LogSchema"][];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** Municipality Log */
  municipality_log_api_v1_logs_municipality__municipality_id__get: {
    parameters: {
      path: {
        municipality_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["LogSchema"][];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** User Log */
  user_log_api_v1_logs_user__user_id__get: {
    parameters: {
      path: {
        user_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["LogSchema"][];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** List */
  list_api_v1_municipalities__get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["MunicipalitySchema"][];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** Create New Municipality */
  create_new_municipality_api_v1_municipalities__post: {
    parameters: {
      header?: {
        "x-emt-role"?: string | null;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["MunicipalityCreateSchema"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["MunicipalitySchema"];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** Read */
  read_api_v1_municipalities__municipality_id__get: {
    parameters: {
      path: {
        municipality_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["MunicipalitySchema"];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** Remove Municipality */
  remove_municipality_api_v1_municipalities__municipality_id__delete: {
    parameters: {
      header?: {
        "x-emt-role"?: string | null;
      };
      path: {
        municipality_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["DeleteSchema"];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** Patch Municipality */
  patch_municipality_api_v1_municipalities__municipality_id__patch: {
    parameters: {
      header?: {
        "x-emt-role"?: string | null;
      };
      path: {
        municipality_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["MunicipalityUpdateSchema"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["MunicipalitySchema"];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Upload File
   * @description This is a special view, which handles image-uploads for municipality.
   */
  upload_file_api_v1_municipalities__municipality_id__file_upload_post: {
    parameters: {
      header?: {
        "x-emt-role"?: string | null;
      };
      path: {
        municipality_id: number;
      };
    };
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["Body_upload_file_api_v1_municipalities__municipality_id__file_upload_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["ImageSchema"];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Update File
   * @description This is a special view, which handles image-uploads for municipality.
   */
  update_file_api_v1_municipalities__municipality_id__file_update_patch: {
    parameters: {
      header?: {
        "x-emt-role"?: string | null;
      };
      path: {
        municipality_id: number;
      };
    };
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["Body_update_file_api_v1_municipalities__municipality_id__file_update_patch"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["ImageSchema"];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Remove File
   * @description Handles deletion of images attached to fields "image" or "emblem".
   */
  remove_file_api_v1_municipalities__municipality_id__file_delete__field__delete: {
    parameters: {
      header?: {
        "x-emt-role"?: string | null;
      };
      path: {
        municipality_id: number;
        field: "image" | "emblem";
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["DeleteSchema"];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** Assign User */
  assign_user_api_v1_municipalities_assign_user_post: {
    parameters: {
      header?: {
        "x-emt-role"?: string | null;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserMunicipalityRoleCreateSchema"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserMunicipalityRoleSchema"];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** Assign Multiple Users */
  assign_multiple_users_api_v1_municipalities_assign_multiple_users_post: {
    parameters: {
      header?: {
        "x-emt-role"?: string | null;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserMunicipalityRoleCreateSchema"][];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserMunicipalityRoleSchema"][];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** Remove User */
  remove_user_api_v1_municipalities_revoke_user_role_patch: {
    parameters: {
      header?: {
        "x-emt-role"?: string | null;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserMunicipalityRoleUpdateSchema"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserMunicipalityRoleSchema"];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** Read Users Me */
  read_users_me_api_v1_users_profile_get: {
    parameters: {
      header?: {
        "x-emt-role"?: string | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserSchema"];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** List */
  list_api_v1_users__get: {
    parameters: {
      header?: {
        "x-emt-role"?: string | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserSchema"][];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** Create New User */
  create_new_user_api_v1_users__post: {
    parameters: {
      header?: {
        "x-emt-role"?: string | null;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserCreateSchema"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["UserSchema"];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** List Minimal */
  list_minimal_api_v1_users_minimal_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserMinimalSchema"][];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Create Minimal User
   * @description This endpoint creates a minimal user, who then should complete their
   * sign-up process themself.
   */
  create_minimal_user_api_v1_users_minimal_post: {
    parameters: {
      header?: {
        "x-emt-role"?: string | null;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserInviteSchema"];
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["UserSchema"];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** Filtered List */
  filtered_list_api_v1_users_filtered_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserFilterSchema"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserMinimalSchema"][];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** Notifications */
  notifications_api_v1_users_notifications_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserAnnotationSchema"][];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** Delete Notifications */
  delete_notifications_api_v1_users_notifications__notification_id__delete: {
    parameters: {
      path: {
        notification_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** Read */
  read_api_v1_users__user_id__get: {
    parameters: {
      header?: {
        "x-emt-role"?: string | null;
      };
      path: {
        user_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserSchema"];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** Remove User */
  remove_user_api_v1_users__user_id__delete: {
    parameters: {
      header?: {
        "x-emt-role"?: string | null;
      };
      path: {
        user_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["DeleteSchema"];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** Patch User */
  patch_user_api_v1_users__user_id__patch: {
    parameters: {
      header?: {
        "x-emt-role"?: string | null;
      };
      path: {
        user_id: number;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserUpdateSchema"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserSchema"];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** Complete Registration */
  complete_registration_api_v1_users_activate_patch: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserCompleteRegistrationSchema"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserSchema"];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** Initiate Email Change */
  initiate_email_change_api_v1_users_initiate_email_change_patch: {
    parameters: {
      header?: {
        "x-emt-role"?: string | null;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserUpdateEmailSchema"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserSchema"];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** Finalise Email Change */
  finalise_email_change_api_v1_users_finalise_email_change_patch: {
    parameters: {
      query: {
        token: string;
      };
      header?: {
        "x-emt-role"?: string | null;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserSchema"];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** Set User Password */
  set_user_password_api_v1_users_set_password_patch: {
    parameters: {
      header?: {
        "x-emt-role"?: string | null;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserUpdatePasswordSchema"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserSchema"];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /**
   * Initiate Password Reset
   * @description This route, in constrast to other endpoints, will always return a code 200,
   * even if the password-reset was not initiate.
   */
  initiate_password_reset_api_v1_users_initiate_password_reset_patch: {
    parameters: {
      query: {
        email: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** Finalise Password Reset */
  finalise_password_reset_api_v1_users_finalise_password_reset_patch: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserPasswortResetSchema"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserSchema"];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** Reinvite User */
  reinvite_user_api_v1_users_re_invite__user_id__patch: {
    parameters: {
      header?: {
        "x-emt-role"?: string | null;
      };
      path: {
        user_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["UserSchema"];
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** Registration Check */
  registration_check_api_v1_users_registration_check_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserRegistrationCheckSchema"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Bad request */
      400: {
        content: never;
      };
      /** @description Unauthorized */
      401: {
        content: never;
      };
      /** @description Forbidden */
      403: {
        content: never;
      };
      /** @description Not found */
      404: {
        content: never;
      };
      /** @description Method not Allowed */
      405: {
        content: never;
      };
      /** @description Unprocessable Entity */
      422: {
        content: never;
      };
    };
  };
  /** Serve File */
  serve_file_media__storage___file_id__get: {
    parameters: {
      query?: {
        force_download?: unknown;
      };
      path: {
        storage: string;
        file_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Serve File Download */
  serve_file_download_media__storage___file_id__download_get: {
    parameters: {
      path: {
        storage: string;
        file_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: never;
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
}
